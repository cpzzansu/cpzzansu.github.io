[
  {
    "title": "React + Spring Boot 기반 클라우드 스토리지 “파일 다운로드” 기능 구현",
    "url": "/posts/cloud-storage-service-file-download/",
    "categories": "React, Cloud Storage",
    "tags": "html, react, javascript, css, file, upload, modal, redux, JAVA, SpringBoot",
    "date": "2025-04-29 12:01:00 +0900",
    "content": "선택한 파일을 ZIP으로 묶어 한번에 내려받는 기능을 React와 Spring Boot로 구현해봤습니다. Blob처리, ZipOutputStream 스트리밍, HTTP 요청, 응답을 활용했습니다."
  },
  {
    "title": "React 클라우드 스토리지 대용량 파일 업로드 취소 기능 구현",
    "url": "/posts/react-file-upload/",
    "categories": "React, Cloud Storage",
    "tags": "html, react, javascript, css, file, upload, modal, redux",
    "date": "2025-04-28 12:01:00 +0900",
    "content": "대용량 파일을 업로드 할 때, &quot;취소&quot; 할 수 있도록 구현하기"
  },
  {
    "title": "자바(Spring Boot)를 활용한 클라우드 스토리지 파일 저장 구현하기",
    "url": "/posts/java-spring-boot-file-save/",
    "categories": "React, Cloud Storage",
    "tags": "html, react, javascript, css, file, upload, modal, redux",
    "date": "2025-04-25 12:01:00 +0900",
    "content": "클라우드 스토리지 서비스를 개발하면서 핵심적인 기능 중 하나는 바로 파일 업로드입니다. 이번 글에서는 자바(Spring Boot) 환경에서 파일 업로드 API와 이를 서버에 저장하는 방식을 실무 예제를 통해 자세히 설명하겠습니다."
  },
  {
    "title": "끊김 없는 파일 업로드를 위한 React 최상단 Modal 배치하기",
    "url": "/posts/create-file-upload-modal/",
    "categories": "React, Cloud Storage",
    "tags": "html, react, javascript, css, file, upload, modal, redux",
    "date": "2025-04-25 12:01:00 +0900",
    "content": "React + Redux 기반의 최상단 모달 구조를 통해, 화면 어디로 이동해도 끊김 없이 업로드 상황을 관리하는 방법을 소개합니다."
  },
  {
    "title": "Java에서 URL 생성",
    "url": "/posts/url-uri-java-boot/",
    "categories": "JAVA, Spring Boot",
    "tags": "java, spring, boot, 자바, 스프링부트, 스프링, url, uri",
    "date": "2025-04-01 12:49:00 +0900",
    "content": "URL(String) 생성자의 Deprecation과 URI의 활용"
  },
  {
    "title": "JwtAuthenticationFilter를 이용한 Spring Security JWT 인증 필터 설정 방법",
    "url": "/posts/spring-boot-security-custom-filter/",
    "categories": "JAVA, Spring Boot",
    "tags": "java, spring, boot, 자바, 스프링부트, 스프링, security, JWT, filter",
    "date": "2025-03-25 01:49:00 +0900",
    "content": "Jwt token 검증 custom 필터 세팅"
  },
  {
    "title": "MapStruct를 이용한 DTO 매핑 자동화(feat.관심사의 분리)",
    "url": "/posts/mapstruct/",
    "categories": "JAVA, Spring Boot",
    "tags": "java, spring, boot, 자바, 스프링부트, 스프링, JPA, entity, mapStruct, dto",
    "date": "2025-03-24 17:55:00 +0900",
    "content": "MapStruct를 이용한 DTO 매핑 자동화를 이용해서 우리 한 번 신나게 달려가봐요!"
  },
  {
    "title": "귤톡 개발일지 - 채팅방 데이터 설계 변경 이야기",
    "url": "/posts/develop-diary-gyooltalk/",
    "categories": "React Native Expo, 귤톡",
    "tags": "react, native, expo, 귤톡, 데이터베이스, database, mongodb, 채팅, 앱, 모바일, 설계",
    "date": "2025-03-24 00:30:00 +0900",
    "content": "데이터 설계 변경의 무서움"
  },
  {
    "title": "React Native Expo에서 JWT 토큰 검증하기",
    "url": "/posts/jwt-token-decode/",
    "categories": "React Native Expo, 귤톡",
    "tags": "react, native, expo, jwt, token, 검증",
    "date": "2025-03-23 22:00:00 +0900",
    "content": "JWT 토큰의 검증이 필요할 때, 토큰을 서버로 보내서 검증할 것인가? 아니면 클라이언트에서 검증해서 바로 로그인페이지로 보낼 것인가? 그것이 문제로다"
  },
  {
    "title": "<독서노트>실리콘밸리의 팀장들(1)",
    "url": "/posts/team-leaders-of-sillicon-valley-1/",
    "categories": "독서노트, 실리콘밸리의 팀장들",
    "tags": "실리콘밸리의 팀장들, 킴 스콧, kim scott, 독서노트, 기록, 생각",
    "date": "2025-03-23 02:00:00 +0900",
    "content": "실리콘밸리의 팀장들 0-76페이지까지 읽고 쓰는 독서 노트"
  },
  {
    "title": "securityFilterChain 설정",
    "url": "/posts/spring-boot-security/",
    "categories": "JAVA, Spring Boot",
    "tags": "스프링, 스프링부트, 보안, 필터, spring, springboot, filter, chain, setting, config",
    "date": "2025-03-22 23:00:00 +0900",
    "content": "스프링 부트 security config 설정"
  },
  {
    "title": "깃 블로그를 처음 만들었다.",
    "url": "/posts/%EC%B2%98%EC%9D%8C%EC%9C%BC%EB%A1%9C%EC%93%B0%EB%8A%94%EA%B9%83%EB%B8%94%EB%A1%9C%EA%B7%B8/",
    "categories": "Development Skills, Diary",
    "tags": "시작, 깃, 블로그, start, git, blog",
    "date": "2025-03-21 09:00:00 +0900",
    "content": "쉬울 줄 알았는데... 생각보다 어렵네..."
  }
  
]

